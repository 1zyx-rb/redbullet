local UserInputService = game:GetService("UserInputService")

-- Create the main GUI
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UICornerFrame = Instance.new("UICorner")
local TitleBar = Instance.new("Frame")
local UICornerTitleBar = Instance.new("UICorner")
local TitleLabel = Instance.new("TextLabel")
local CloseButton = Instance.new("TextButton")
local UICornerCloseButton = Instance.new("UICorner")
local TextBox = Instance.new("TextBox")
local UICornerTextBox = Instance.new("UICorner")
local ExecuteButton = Instance.new("TextButton")
local UICornerExecuteButton = Instance.new("UICorner")
local BottomImage = Instance.new("ImageLabel")
local UICornerTopImage = Instance.new("UICorner")

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Frame setup
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)  -- Matte black background
Frame.Size = UDim2.new(0, 600, 0, 400)
Frame.Position = UDim2.new(0.5, -300, 0.5, -200)
Frame.BorderSizePixel = 0

-- UICorner for Frame
UICornerFrame.CornerRadius = UDim.new(0, 12)
UICornerFrame.Parent = Frame

-- TitleBar setup
TitleBar.Parent = Frame
TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)  -- Matte black background
TitleBar.BackgroundTransparency = 1  -- Make it fully transparent
TitleBar.Size = UDim2.new(1, 0, 0, 40)
TitleBar.BorderSizePixel = 0

-- UICorner for TitleBar
UICornerTitleBar.CornerRadius = UDim.new(0, 12)
UICornerTitleBar.Parent = TitleBar

-- TitleLabel setup


-- CloseButton setup
CloseButton.Parent = TitleBar
CloseButton.Size = UDim2.new(0, 30, 1, 0)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18
CloseButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)  -- Matte black background
CloseButton.BorderSizePixel = 0

-- UICorner for CloseButton
UICornerCloseButton.CornerRadius = UDim.new(0, 12)
UICornerCloseButton.Parent = CloseButton

-- TextBox setup
TextBox.Parent = Frame
TextBox.BackgroundTransparency = 1  -- Make it fully transparent
TextBox.Size = UDim2.new(0.95, 0, 0.6, 0)
TextBox.Position = UDim2.new(0.025, 0, 0.1, 0)
TextBox.Font = Enum.Font.Code
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 12
TextBox.TextXAlignment = Enum.TextXAlignment.Left
TextBox.TextYAlignment = Enum.TextYAlignment.Top
TextBox.ClearTextOnFocus = false
TextBox.MultiLine = true

-- UICorner for TextBox
UICornerTextBox.CornerRadius = UDim.new(0, 12)
UICornerTextBox.Parent = TextBox

-- ExecuteButton setup
ExecuteButton.Parent = Frame
ExecuteButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ExecuteButton.Size = UDim2.new(0.95, 0, 0.1, 0)
ExecuteButton.Position = UDim2.new(0.025, 0, 0.75, 0)
ExecuteButton.Font = Enum.Font.SourceSansBold
ExecuteButton.Text = "Execute"
ExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteButton.TextSize = 18

-- UICorner for ExecuteButton
UICornerExecuteButton.CornerRadius = UDim.new(0, 12)
UICornerExecuteButton.Parent = ExecuteButton

-- TopImage setup below ExecuteButton
BottomImage.Parent = Frame
BottomImage.BackgroundTransparency = 1  -- Make it fully transparent
BottomImage.Size = UDim2.new(0, 200, 0, 50)
BottomImage.Position = UDim2.new(0.5, -100, 0.85, 0)  -- Position below ExecuteButton
BottomImage.Image = "https://github.com/1zyx-rb/redbullet/raw/main/download.png"

-- UICorner for TopImage
UICornerTopImage.CornerRadius = UDim.new(0, 12)
UICornerTopImage.Parent = BottomImage

-- Draggable functionality
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Close button functionality
CloseButton.MouseButton1Click:Connect(function()
    Frame.Visible = false
end)

UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightShift then
        Frame.Visible = true
    end
end)

-- Execute button functionality
ExecuteButton.MouseButton1Click:Connect(function()
    local scriptToExecute = TextBox.Text
    local success, errorMessage = pcall(function()
        loadstring(scriptToExecute)()
    end)
    if not success then
        warn("Error executing script: " .. errorMessage)
    end
end)

print("Nexis is working, Enjoy Scripting!")
